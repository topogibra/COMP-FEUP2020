import static ioPlus.printResult(int) void;
import static ioPlus.requestNumber() int;
import static io.println() void;
import static ioOwn.printCalcMenu() void;
import static ioOwn.printInvalidOperation() void;

class Calculator {
    int exitOption;
    int addOption;
    int subOption;
    int multOption;
    int divOption;

    public static void main(String[] args) {
        new Calculator().start();
    }

    public void start() {
        int userOption;
        this.initFields();

        userOption = this.getOption();

        while(!this.equals(userOption, exitOption)) {
            ioPlus.printResult(this.handleOption(userOption));
            io.println();
            userOption = this.getOption();
        }

    }

    public void initFields() {
        exitOption = 0;
        addOption = 1;
        subOption = 2;
        multOption = 3;
        divOption = 4;
    }

    public int getOption() {
        ioOwn.printCalcMenu();
        return ioPlus.requestNumber();
    }

    public boolean equals(int a, int b) {
        return !(a < b) && !(b < a);
    }

    public int handleOption(int userOption) {
        int result;

        if (this.equals(userOption, addOption))
            result = this.handleAddition();
        else if (this.equals(userOption, subOption))
            result = this.handleSubtraction();
        else if (this.equals(userOption, multOption))
            result = this.handleMultiplication();
        else if (this.equals(userOption, divOption))
            result = this.handleDivision();
        else {
            result = 0 - 1;
            ioOwn.printInvalidOperation();
        }

        return result;
    }

    public int handleAddition() {
        int[] values;
        values = this.getValues();
        return values[0] + values[1];
    }

    public int handleSubtraction() {
        int[] values;
        values = this.getValues();
        return values[0] - values[1];
    }

    public int handleMultiplication() {
        int[] values;
        values = this.getValues();
        return values[0] * values[1];
    }

    public int handleDivision() {
        int[] values;

        values = this.getValues();
        while(this.equals(values[1], 0)) {
            ioOwn.printInvalidOperation();
            values = this.getValues();
        }

        return values[0] / values[1];
    }

    public int[] getValues() {
        int[] values;
        values = new int[2];

        values[0] = ioPlus.requestNumber();
        values[1] = ioPlus.requestNumber();

        return values;
    }

}