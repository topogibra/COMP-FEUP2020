import static MathUtils.random(int, int) int;
import static ioOwn.requestArraySize() int;
import static ioOwn.requestArrayIndex() int;
import static ioOwn.printExceededSize() void;
import static ioOwn.printWinner() void;
import static ioOwn.printLoser() void;
import static io.print(int) void;
import static io.println() void;

class ArrayStorage {

    int[] array;

    public static void main(String[] args) {
        new ArrayStorage().start();
    }

    public void start() {
        int tries;
        int storageSize;

        tries = 5;
        storageSize = ioOwn.requestArraySize();

        this.init(storageSize);
        this.getArray()[this.getRandom(storageSize - 1)] = 1;

        while(!this.checkWinner() && 0 < tries) {
            ioOwn.printLoser();
            tries = tries - 1;
        }

        ioOwn.printWinner();

        this.printArray();
    }

    public void init(int storageSize) {
        array = new int[storageSize];
    }

    public boolean checkWinner() {
        int userNumber;
        boolean result;

        result = false;
        userNumber = ioOwn.requestArrayIndex();

        if (array.length - 1 < userNumber) {
            ioOwn.printExceededSize();
            result = false;
        }
        else {
            if (this.equals(this.getArray()[userNumber], 1))
                result = true;
            else {}
        }

         return result;
    }

    public boolean equals(int a, int b) {
        return !(a < b) && !(b < a);
    }

    public int[] getArray() {
        return array;
    }

    public void setArray(int[] a) {
        array = a;
    }

    public int getValue(int index) {
        return array[index];
    }

    public int getRandom(int maxNumber) {
        return MathUtils.random(0, maxNumber);
    }

    public void printArray() {
        int i;
        i = 0;

        while (i < this.getArray().length) {
            io.print(this.getValue(i));
            io.println();
            i = i + 1;
        }
    }

}